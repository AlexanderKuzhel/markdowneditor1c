
Процедура ПриСменеСтраницыПоляКомментария(Форма,Элемент, ТекущаяСтраница) Экспорт
	
	ПутьКДанным=РМ_MarkdownКлиентСервер.ПолучитьПутьКДаннымИЗПутиБезЛишнего(РМ_MarkdownКлиентСервер.ПолучитьПутьКДаннымПоИменаПанелиСтраниц(Элемент.Имя));
	
	Если ТекущаяСтраница=Форма.Элементы[РМ_MarkdownКлиентСервер.ПолучитьИмяСтраницыПросмотраКомментария(ПутьКДанным)] Тогда
		
		ТекстДляПросмотра = Вычислить("Форма."+ПутьКДанным);
		
//		ДанныеПрисоединенныхФайлов = РМ_MarkdownКлиентСервер.ДанныеПрисовединенныхФайлов(Форма);
//		
//		РМ_MarkdownКлиентСервер.СконвертироватьИменаПрисоединенныхФайловВТексте(ДанныеПрисоединенныхФайлов, ТекстДляПросмотра);
		
		Документ=Форма.Элементы[РМ_MarkdownКлиентСервер.ПолучитьИмяЭлементаПросмотраКомментария(ПутьКДанным)].Документ.defaultView;
		Документ.clearTexts();
		Документ.addText("preview", ТекстДляПросмотра);
		Документ.markdownConvert();
		
		ЗаписьТекста=Новый ТекстовыйДокумент;
		ЗаписьТекста.УстановитьТекст(Документ.document.documentElement.outerHTML);
		ЗаписьТекста.Записать("/mnt/Disk/1С/цпр/РедакторМаркдаун1С/ТекстHTML.txt");
	Конецесли;
	
КонецПроцедуры

Процедура ОбработкаКомандыПоляКомментария(Форма,Команда) Экспорт
	ТекстЗамены="";
	
	СтруктураСтрокMD=Новый Структура;
	СтруктураСтрокMD.Вставить("ТекстMDНачалоВыделения","");
	СтруктураСтрокMD.Вставить("ТекстMDКонцаВыделения","");
	СтруктураСтрокMD.Вставить("ТекстMDНачалоСтроки","");
	СтруктураСтрокMD.Вставить("ТекстMDСтрокаДо","");
	СтруктураСтрокMD.Вставить("ТекстMDСтрокаПосле","");
	
	Если СтрНайти(Команда.Имя,"КомандаMDЖирный")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоВыделения = "**";
		СтруктураСтрокMD.ТекстMDКонцаВыделения = "**";
		
		ТекстЗамены= "КомандаMDЖирный_";
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDКурсив")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоВыделения = "*";
		СтруктураСтрокMD.ТекстMDКонцаВыделения = "*";
		
		ТекстЗамены= "КомандаMDКурсив_";
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDЗачеркнутый")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоВыделения = "~~";
		СтруктураСтрокMD.ТекстMDКонцаВыделения = "~~";
		
		ТекстЗамены= "КомандаMDЗачеркнутый_";
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDМаркерыСписок")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="* ";
		
		ТекстЗамены= "КомандаMDМаркерыСписок_";
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDНумерованныйСписок")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="1. ";
		
		ТекстЗамены= "КомандаMDНумерованныйСписок_";
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDЗаголовок1")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="# ";
		
		
		ТекстЗамены= "КомандаMDЗаголовок1_";
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDЗаголовок2")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="## ";
		
		
		ТекстЗамены= "КомандаMDЗаголовок2_";
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDЗаголовок3")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="### ";
		
		
		ТекстЗамены= "КомандаMDЗаголовок3_";
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDЦитата")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="> ";
		
		ТекстЗамены= "КомандаMDЦитата_";
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDСписокЗадач")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="* [ ] ";
		
		ТекстЗамены= "КомандаMDСписокЗадач_";
		
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDСсылка")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоВыделения = "[](";
		СтруктураСтрокMD.ТекстMDКонцаВыделения = ")";
		
		ТекстЗамены= "КомандаMDСсылка_";
		
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDПрограммныйКод")=1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоВыделения = "```"+Символы.ПС;
		СтруктураСтрокMD.ТекстMDКонцаВыделения = Символы.ПС+"```";
		
		ТекстЗамены= "КомандаMDПрограммныйКод_";
	
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDТаблица")=1 Тогда
		СтруктураСтрокMD.ТекстMDСтрокаПосле = "
		|| Заголовок колонки 1 | Заголовок колонки 2 |
		|| ------ | ------ |
		|| Текст ячейки | Текст ячейки |
		|| Текст ячейки | Текст ячейки |";
		
		ТекстЗамены= "КомандаMDТаблица_";
		
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDВставитьИзображениеИзБуфераОбмена")=1 Тогда
		
//		ПутьКФайлу = РаботаСКартинкамиКлиент.КартинкаИзБуфераВФайл();
//		Если ЗначениеЗаполнено(ПутьКФайлу) Тогда
//			
//			ИмяФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПутьКФайлу).Имя;
//			СтруктураСтрокMD.ТекстMDНачалоВыделения = СтрШаблон("![](%1)", ИмяФайла);
//			
//			Если Форма.ТаблицаПрисоединенныхФайлов.НайтиСтроки(
//				Новый Структура("ИмяФайла", ИмяФайла)).Количество() = 0 Тогда
//			
//				ДобавитьНовыйПрисоединенныйФайл(ИмяФайла, ПутьКФайлу, Форма);
//			Иначе
//				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Файл с таким именем уже добавлен");
//			КонецЕсли;
//			
//		КонецЕсли;
//		ТекстЗамены= "КомандаMDВставитьИзображениеИзБуфераОбмена_";
		
	ИначеЕсли СтрНайти(Команда.Имя,"КомандаMDДобавитьФайл")=1 Тогда
		
		ПараметрыВыполнения = Новый Структура("ФормаВладелец", Форма);
		ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Обработчик = Новый ОписаниеОповещения("ДобавитьИзФайловойСистемыБезРасширенияПослеЗагрузкиФайла", ЭтотОбъект, ПараметрыВыполнения);
		НачатьПомещениеФайла(Обработчик, , ДиалогВыбора, , Форма.УникальныйИдентификатор);
		
		Возврат;
		
	ИначеЕсли СтрНайти(Команда.Имя,"ВставитьПрисоединенныйФайл")=1 Тогда
		
		ИмяДляПоиска = СтрЗаменить(Команда.Имя, "ВставитьПрисоединенныйФайл", "");
		Поз = Найти(ИмяДляПоиска, "_"); 
		ИдентификаторСтроки = Число(Лев(ИмяДляПоиска, Поз-1));
		СтрокаФайла = Форма.ТаблицаПрисоединенныхФайлов.НайтиПоИдентификатору(ИдентификаторСтроки);
		ИмяФайла = СтрокаФайла.ИмяФайла;
		
		Если ЗначениеЗаполнено(ИмяФайла) Тогда
			СтруктураСтрокMD.ТекстMDНачалоВыделения = СтрШаблон("![](%1)", ИмяФайла);
		КонецЕсли;
		ТекстЗамены= "ВставитьПрисоединенныйФайл"+ИдентификаторСтроки+"_";
		
	Иначе
		Возврат;
	КонецЕсли;
	
	ИмяЭлементаФормы=Сред(Команда.Имя,СтрДлина(ТекстЗамены)+1);
	
	ГраницыВыделения=Новый Структура("НачалоСтроки,КонецСтроки,НачалоКолонки,КонецКолонки");
	Форма.Элементы[ИмяЭлементаФормы].ПолучитьГраницыВыделения(ГраницыВыделения.НачалоСтроки, ГраницыВыделения.НачалоКолонки, ГраницыВыделения.КонецСтроки, ГраницыВыделения.КонецКолонки);
	
	ПутьКДанным=СтрЗаменить(ИмяЭлементаФормы,"_",".");
	
	ТекстКомментария=Форма[ПутьКДанным];
	
	КомандаMDДобавитьШаблон(ТекстКомментария,ГраницыВыделения,СтруктураСтрокMD);	

	МассивПути=СтрРазделить(ПутьКДанным,".",Ложь);
	Если МассивПути.Количество()=1 Тогда
		Форма[МассивПути[0]]=ТекстКомментария;
	ИначеЕсли МассивПути.Количество()=2 Тогда
		Форма[МассивПути[0]][МассивПути[1]]=ТекстКомментария;
	Иначе
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьИзФайловойСистемыБезРасширенияПослеЗагрузкиФайла(Помещен, Адрес, ВыбранноеИмяФайла, ПараметрыВыполнения) Экспорт
	
	Если Не Помещен Тогда
		Возврат;
	КонецЕсли;
	
//	СтруктураПути = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ВыбранноеИмяФайла);
//	ДобавитьНовыйПрисоединенныйФайл(СтруктураПути.Имя, ВыбранноеИмяФайла, ПараметрыВыполнения.ФормаВладелец, Адрес);
	
КонецПроцедуры

Процедура ДобавитьНовыйПрисоединенныйФайл(ИмяФайла, ПутьКФайлу, Форма, Адрес = Неопределено)
	
	Если Адрес = Неопределено Тогда
		Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлу), Форма.УникальныйИдентификатор);
	КонецЕсли;
	
	СтрокаПрисоединенногоФайла = Форма.ТаблицаПрисоединенныхФайлов.Добавить();
	СтрокаПрисоединенногоФайла.ПутьКФайлу = ПутьКФайлу;
	СтрокаПрисоединенногоФайла.ИмяФайла = ИмяФайла;
	СтрокаПрисоединенногоФайла.Адрес = Адрес;
	СтрокаПрисоединенногоФайла.ЭтоНовый = Истина;

	Форма.Подключаемый_ПриДобавленииПрисоединенногоФайла(ИмяФайла, СтрокаПрисоединенногоФайла.ПолучитьИдентификатор());
	
КонецПроцедуры

Процедура УдалитьНовыйПрисоединенныйФайл(Форма,ИдентификаторСтроки) Экспорт
	
	Элементы = Форма.Элементы;

	ГруппаПрисоединенногоФайла = Элементы.Найти("Группа_ПрисоединенныйФайл_"+ИдентификаторСтроки);
	Если ГруппаПрисоединенногоФайла <> Неопределено Тогда
		ГруппаПрисоединенногоФайла.Видимость = Ложь;
	КонецЕсли;
	
	СтрокаФайла = Форма.ТаблицаПрисоединенныхФайлов.НайтиПоИдентификатору(ИдентификаторСтроки);
	СтрокаФайла.ПутьКФайлу = "";
	СтрокаФайла.ИмяФайла = "";
	СтрокаФайла.Адрес = "";
	
КонецПроцедуры

Процедура ПриНажатииПоляПросмотраКомментария(Форма,Элемент, ДанныеСобытия, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка=Ложь;
	
	Если СтрНачинаетсяС(ДанныеСобытия.Element.id,"Файл_") Тогда
//		ИдентификаторФайла=СтрЗаменить(ДанныеСобытия.Element.id,"Файл_","");
//		СсылкаНаФайл=УправлениеЗадачами.ПолучитьСсылкуНаПрисоединенныйФайлПоИдентификатору(Новый УникальныйИдентификатор(ИдентификаторФайла));
//		ОткрытьПрисоединенныйФайлПоСсылке(СсылкаНаФайл,Форма.УникальныйИдентификатор);
	ИначеЕсли ЗначениеЗаполнено(ДанныеСобытия.href) Тогда
		ЗапуститьПриложение(ДанныеСобытия.href);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьПрисоединенныйФайл(Форма,ИдентификаторСтроки) Экспорт
	
	СтрокаФайла = Форма.ТаблицаПрисоединенныхФайлов.НайтиПоИдентификатору(ИдентификаторСтроки);
	ЗапуститьПриложение(СтрокаФайла.ПутьКФайлу);
	
КонецПроцедуры

Процедура ОткрытьПрисоединенныйФайлПоСсылке(СсылкаНаПрисоединенныйФайл,УникальныйИдентификатор) Экспорт
//	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(СсылкаНаПрисоединенныйФайл, Неопределено, УникальныйИдентификатор);
//	Если ДанныеФайла.Зашифрован Тогда
//		// Файл может быть изменен в другом сеансе.
//		ОповеститьОбИзменении(СсылкаНаПрисоединенныйФайл);
//		Возврат;
//	КонецЕсли;
//	
//	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла,Ложь);

КонецПроцедуры

Процедура КомандаMDДобавитьШаблон(ТекстКомментария,ГраницыВыделения,СтруктураСтрокMD)
	
	ТекстовыйДокумент=Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстКомментария);
	
	Если ЗначениеЗаполнено(СтруктураСтрокMD.ТекстMDНачалоВыделения) Тогда
		//В начало вставляем данную строку
		СтрокаВставки=ТекстовыйДокумент.ПолучитьСтроку(ГраницыВыделения.НачалоСтроки);
		
		СтрокаВставки=Лев(СтрокаВставки,ГраницыВыделения.НачалоКолонки-1)
						+СтруктураСтрокMD.ТекстMDНачалоВыделения
						+Сред(СтрокаВставки,ГраницыВыделения.НачалоКолонки);
						
		ТекстовыйДокумент.УдалитьСтроку(ГраницыВыделения.НачалоСтроки);
		ТекстовыйДокумент.ВставитьСтроку(ГраницыВыделения.НачалоСтроки,СтрокаВставки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураСтрокMD.ТекстMDКонцаВыделения) Тогда
		//В начало вставляем данную строку
		СтрокаВставки=ТекстовыйДокумент.ПолучитьСтроку(ГраницыВыделения.КонецСтроки);
		
		КоличествоСимоловНачалаВыделения=0;
		Если ГраницыВыделения.НачалоСтроки=ГраницыВыделения.КонецСтроки Тогда
			КоличествоСимоловНачалаВыделения=СтрДлина(СтруктураСтрокMD.ТекстMDНачалоВыделения);	
		КонецЕсли;
		
		СтрокаВставки=Лев(СтрокаВставки,ГраницыВыделения.КонецКолонки+КоличествоСимоловНачалаВыделения-1)
						+СтруктураСтрокMD.ТекстMDКонцаВыделения
						+Сред(СтрокаВставки,ГраницыВыделения.КонецКолонки+КоличествоСимоловНачалаВыделения);
						
		ТекстовыйДокумент.УдалитьСтроку(ГраницыВыделения.КонецСтроки);
		ТекстовыйДокумент.ВставитьСтроку(ГраницыВыделения.КонецСтроки,СтрокаВставки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураСтрокMD.ТекстMDНачалоСтроки) Тогда
		Для НомерСтроки=ГраницыВыделения.НачалоСтроки ПО ГраницыВыделения.КонецСтроки Цикл
			СтрокаВставки=ТекстовыйДокумент.ПолучитьСтроку(НомерСтроки);
			СтрокаВставки=СтруктураСтрокMD.ТекстMDНачалоСтроки+СтрокаВставки;
			
			ТекстовыйДокумент.УдалитьСтроку(НомерСтроки);
			ТекстовыйДокумент.ВставитьСтроку(НомерСтроки,СтрокаВставки);
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураСтрокMD.ТекстMDСтрокаДо) Тогда
		ТекстовыйДокумент.ВставитьСтроку(ГраницыВыделения.НачалоСтроки,СтруктураСтрокMD.ТекстMDСтрокаДо);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураСтрокMD.ТекстMDСтрокаПосле) Тогда
		ТекстовыйДокумент.ВставитьСтроку(ГраницыВыделения.НачалоСтроки+?(ЗначениеЗаполнено(СтруктураСтрокMD.ТекстMDСтрокаДо),1,0),СтруктураСтрокMD.ТекстMDСтрокаПосле);
	КонецЕсли;
	
	
	ТекстКомментария=ТекстовыйДокумент.ПолучитьТекст();
КонецПроцедуры 

Процедура MDДобавитьПереводСтроки(ТекстКомментария)
	Если ЗначениеЗаполнено(ТекстКомментария) Тогда	
		ТекстКомментария = ТекстКомментария 
			+ Символы.ПС + Символы.ПС;
	Конецесли;	
КонецПроцедуры 

