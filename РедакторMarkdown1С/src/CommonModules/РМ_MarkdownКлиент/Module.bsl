Процедура ПриСменеСтраницыПоляКомментария(Форма, Элемент, ТекущаяСтраница) Экспорт

	ПутьКДанным=РМ_MarkdownКлиентСервер.ПолучитьПутьКДаннымПоИменаПанелиСтраниц(Элемент.Имя);
	ПутьКДаннымБезЛишнего=РМ_MarkdownКлиентСервер.ПолучитьПутьКДаннымБезЛишнего(ПутьКДанным);

	Если ТекущаяСтраница = Форма.Элементы[РМ_MarkdownКлиентСервер.ПолучитьИмяСтраницыПросмотраКомментария(ПутьКДанным)] Тогда

		ТекстДляПросмотра = Вычислить("Форма." + ПутьКДанным);

		ДанныеПрисоединенныхФайлов = РМ_MarkdownКлиентСервер.ДанныеПрисовединенныхФайлов(Форма, ПутьКДаннымБезЛишнего);

		РМ_MarkdownКлиентСервер.СконвертироватьИменаПрисоединенныхФайловВТексте(ДанныеПрисоединенныхФайлов,
			ТекстДляПросмотра);

		Документ=Форма.Элементы[РМ_MarkdownКлиентСервер.ПолучитьИмяЭлементаПросмотраКомментария(
			ПутьКДанным)].Документ.defaultView;
		Документ.clearTexts();
		Документ.addText("preview", ТекстДляПросмотра);
		Документ.markdownConvert();
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаКомандыПоляКомментария(Форма, Команда) Экспорт
	ТекстЗамены="";

	СтруктураСтрокMD=Новый Структура;
	СтруктураСтрокMD.Вставить("ТекстMDНачалоВыделения", "");
	СтруктураСтрокMD.Вставить("ТекстMDКонцаВыделения", "");
	СтруктураСтрокMD.Вставить("ТекстMDНачалоСтроки", "");
	СтруктураСтрокMD.Вставить("ТекстMDСтрокаДо", "");
	СтруктураСтрокMD.Вставить("ТекстMDСтрокаПосле", "");

	Если СтрНайти(Команда.Имя, "КомандаMDЖирный") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоВыделения = "**";
		СтруктураСтрокMD.ТекстMDКонцаВыделения = "**";

		ТекстЗамены= "КомандаMDЖирный_";
	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDКурсив") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоВыделения = "*";
		СтруктураСтрокMD.ТекстMDКонцаВыделения = "*";

		ТекстЗамены= "КомандаMDКурсив_";
	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDЗачеркнутый") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоВыделения = "~~";
		СтруктураСтрокMD.ТекстMDКонцаВыделения = "~~";

		ТекстЗамены= "КомандаMDЗачеркнутый_";
	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDМаркерыСписок") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="* ";

		ТекстЗамены= "КомандаMDМаркерыСписок_";
	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDНумерованныйСписок") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="1. ";

		ТекстЗамены= "КомандаMDНумерованныйСписок_";
	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDЗаголовок1") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="# ";
		ТекстЗамены= "КомандаMDЗаголовок1_";
	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDЗаголовок2") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="## ";
		ТекстЗамены= "КомандаMDЗаголовок2_";
	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDЗаголовок3") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="### ";
		ТекстЗамены= "КомандаMDЗаголовок3_";
	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDЦитата") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="> ";

		ТекстЗамены= "КомандаMDЦитата_";
	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDСписокЗадач") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоСтроки="* [ ] ";

		ТекстЗамены= "КомандаMDСписокЗадач_";

	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDСсылка") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоВыделения = "[](";
		СтруктураСтрокMD.ТекстMDКонцаВыделения = ")";

		ТекстЗамены= "КомандаMDСсылка_";

	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDПрограммныйКод") = 1 Тогда
		СтруктураСтрокMD.ТекстMDНачалоВыделения = "```" + Символы.ПС;
		СтруктураСтрокMD.ТекстMDКонцаВыделения = Символы.ПС + "```";

		ТекстЗамены= "КомандаMDПрограммныйКод_";

	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDТаблица") = 1 Тогда
		СтруктураСтрокMD.ТекстMDСтрокаПосле = "
											  || Заголовок колонки 1 | Заголовок колонки 2 |
											  || ------ | ------ |
											  || Текст ячейки | Текст ячейки |
											  || Текст ячейки | Текст ячейки |";

		ТекстЗамены= "КомандаMDТаблица_";

	ИначеЕсли СтрНайти(Команда.Имя, "КомандаMDВставитьИзображениеИзБуфераОбмена") = 1 Тогда
		ТекстЗамены= "КомандаMDВставитьИзображениеИзБуфераОбмена_";
	
		ПутьКДаннымБезЛишнего=СтрЗаменить(Команда.Имя, ТекстЗамены, "");
#Если Не ВебКлиент Тогда
		ДвоичныеДанныеФайла=РМ_БуферОбменаКлиент.ПолучитьКартинкуИзБуфера( , "ДвоичныеДанные");
		Если ТипЗнч(ДвоичныеДанныеФайла) <> Тип("ДвоичныеДанные") Тогда
			Возврат;
		КонецЕсли;
		ПутьКФайлу=ПолучитьИмяВременногоФайла("png");
		ДвоичныеДанныеФайла.Записать(ПутьКФайлу);

		ИмяФайла = РМ_MarkdownКлиентСервер.РазложитьПолноеИмяФайла(ПутьКФайлу).Имя;
		СтруктураСтрокMD.ТекстMDНачалоВыделения = СтрШаблон("![](%1)", ИмяФайла);


		ИмяТаблицыФайлов=РМ_MarkdownКлиентСервер.ИмяТаблицыПрисоединенныхФайлов(ПутьКДаннымБезЛишнего);
		Если Форма[ИмяТаблицыФайлов].НайтиСтроки(
				Новый Структура("ИмяФайла", ИмяФайла)).Количество() = 0 Тогда

			ДобавитьНовыйПрисоединенныйФайл(ИмяФайла, ПутьКФайлу, Форма, ПутьКДаннымБезЛишнего);
		Иначе
			Сообщить("Файл с таким именем уже добавлен");
		КонецЕсли;

#КонецЕсли
	ИначеЕсли
	СтрНайти(Команда.Имя, "КомандаMDДобавитьФайл") = 1 Тогда

		ПараметрыВыполнения = Новый Структура;
		ПараметрыВыполнения.Вставить("ФормаВладелец", Форма);
		ПараметрыВыполнения.Вставить("ПутьКДаннымБезЛишнего", СтрЗаменить(Команда.Имя, "КомандаMDДобавитьФайл_", ""));
		ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Обработчик = Новый ОписаниеОповещения("ДобавитьИзФайловойСистемыБезРасширенияПослеЗагрузкиФайла", ЭтотОбъект,
			ПараметрыВыполнения);
		НачатьПомещениеФайла(Обработчик, , ДиалогВыбора, , Форма.УникальныйИдентификатор);

		Возврат;

	ИначеЕсли СтрНайти(Команда.Имя, "ВставитьПрисоединенныйФайл") = 1 Тогда
		МассивНаименования=СтрРазделить(Команда.Имя, "_");
		ИдентификаторСтроки = Число(МассивНаименования[1]);

		МассивДляЗамены=Новый Массив;
		МассивДляЗамены.Добавить(МассивНаименования[0]);
		МассивДляЗамены.Добавить(МассивНаименования[1]);
		МассивДляЗамены.Добавить("");
		ТекстЗамены=СтрСоединить(МассивДляЗамены, "_");

		МассивНаименования.Удалить(0);
		МассивНаименования.Удалить(0);

		ПутьКДаннымБезЛишнего=СтрСоединить(МассивНаименования, "_");
		ИмяТаблицыФайлов=РМ_MarkdownКлиентСервер.ИмяТаблицыПрисоединенныхФайлов(ПутьКДаннымБезЛишнего);

		СтрокаФайла = Форма[ИмяТаблицыФайлов].НайтиПоИдентификатору(ИдентификаторСтроки);
		ИмяФайла = СтрокаФайла.ИмяФайла;

		Если ЗначениеЗаполнено(ИмяФайла) Тогда
			СтруктураСтрокMD.ТекстMDНачалоВыделения = СтрШаблон("![](%1)", ИмяФайла);
		КонецЕсли;

	Иначе
		Возврат;
	КонецЕсли;

	ИмяЭлементаФормы=Сред(Команда.Имя, СтрДлина(ТекстЗамены) + 1);

	ГраницыВыделения=Новый Структура("НачалоСтроки,КонецСтроки,НачалоКолонки,КонецКолонки");
	Форма.Элементы[ИмяЭлементаФормы].ПолучитьГраницыВыделения(ГраницыВыделения.НачалоСтроки,
		ГраницыВыделения.НачалоКолонки, ГраницыВыделения.КонецСтроки, ГраницыВыделения.КонецКолонки);
	ПутьКДанным=СтрЗаменить(ИмяЭлементаФормы, "_", ".");

	МассивПути=СтрРазделить(ПутьКДанным, ".", Ложь);
	Если МассивПути.Количество() = 1 Тогда
		ТекстКомментария=Форма[МассивПути[0]];
	ИначеЕсли МассивПути.Количество() = 2 Тогда
		ТекстКомментария=Форма[МассивПути[0]][МассивПути[1]];
	Иначе
	КонецЕсли;

	КомандаMDДобавитьШаблон(ТекстКомментария, ГраницыВыделения, СтруктураСтрокMD);

	МассивПути=СтрРазделить(ПутьКДанным, ".", Ложь);
	Если МассивПути.Количество() = 1 Тогда
		Форма[МассивПути[0]]=ТекстКомментария;
	ИначеЕсли МассивПути.Количество() = 2 Тогда
		Форма[МассивПути[0]][МассивПути[1]]=ТекстКомментария;
	Иначе
		
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьИзФайловойСистемыБезРасширенияПослеЗагрузкиФайла(Помещен, Адрес, ВыбранноеИмяФайла,
	ПараметрыВыполнения) Экспорт

	Если Не Помещен Тогда
		Возврат;
	КонецЕсли;

	СтруктураПути = РМ_MarkdownКлиентСервер.РазложитьПолноеИмяФайла(ВыбранноеИмяФайла);
	ДобавитьНовыйПрисоединенныйФайл(СтруктураПути.Имя, ВыбранноеИмяФайла, ПараметрыВыполнения.ФормаВладелец,
		ПараметрыВыполнения.ПутьКДаннымБезЛишнего, Адрес);

КонецПроцедуры

Процедура ДобавитьНовыйПрисоединенныйФайл(ИмяФайла, ПутьКФайлу, Форма, ПутьКДаннымБезЛишнего, Адрес = Неопределено)

	Если Адрес = Неопределено Тогда
		Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлу), Форма.УникальныйИдентификатор);
	КонецЕсли;

	ИмяТаблицыФайлов=РМ_MarkdownКлиентСервер.ИмяТаблицыПрисоединенныхФайлов(ПутьКДаннымБезЛишнего);

	СтрокаПрисоединенногоФайла = Форма[ИмяТаблицыФайлов].Добавить();
	СтрокаПрисоединенногоФайла.ПутьКФайлу = ПутьКФайлу;
	СтрокаПрисоединенногоФайла.ИмяФайла = ИмяФайла;
	СтрокаПрисоединенногоФайла.Адрес = Адрес;
	СтрокаПрисоединенногоФайла.ЭтоНовый = Истина;

	Форма.Подключаемый_ПриДобавленииПрисоединенногоФайла(ИмяФайла, СтрокаПрисоединенногоФайла.ПолучитьИдентификатор(),
		ПутьКДаннымБезЛишнего);

КонецПроцедуры

Процедура УдалитьНовыйПрисоединенныйФайл(Форма, ИдентификаторСтроки, ПутьКДаннымБезЛишнего) Экспорт

	Элементы = Форма.Элементы;

	ИмяГруппыФайла=РМ_MarkdownКлиентСервер.ИмяГруппыНовогоПрисоединеногоФайла(ПутьКДаннымБезЛишнего,
		ИдентификаторСтроки);
	ГруппаПрисоединенногоФайла = Элементы.Найти(ИмяГруппыФайла);
	Если ГруппаПрисоединенногоФайла <> Неопределено Тогда
		ГруппаПрисоединенногоФайла.Видимость = Ложь;
	КонецЕсли;

	ИмяТаблицыПрисоединенныхФайлов=РМ_MarkdownКлиентСервер.ИмяТаблицыПрисоединенныхФайлов(ПутьКДаннымБезЛишнего);
	СтрокаФайла = Форма[ИмяТаблицыПрисоединенныхФайлов].НайтиПоИдентификатору(ИдентификаторСтроки);
	СтрокаФайла.ПутьКФайлу = "";
	СтрокаФайла.ИмяФайла = "";
	СтрокаФайла.Адрес = "";
	
	//Делаем невидимым кнопку вставить
	ИмяКомандыВставить=РМ_MarkdownКлиентСервер.ИмяКомандыВставитьНовогоПрисоединеногоФайла(ПутьКДаннымБезЛишнего,
		ИдентификаторСтроки);
	КнопкаВставить=Элементы.Найти(ИмяКомандыВставить);
	Если КнопкаВставить <> Неопределено Тогда
		КнопкаВставить.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

Процедура ПриНажатииПоляПросмотраКомментария(Форма, Элемент, ДанныеСобытия, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка=Ложь;

	Если СтрНачинаетсяС(ДанныеСобытия.Element.id, "Файл_") Тогда
		ИдентификаторФайла=СтрЗаменить(ДанныеСобытия.Element.id, "Файл_", "");
		СсылкаНаФайл=РМ_MarkdownСервер.ПолучитьСсылкуНаПрисоединенныйФайлПоИдентификатору(
			Новый УникальныйИдентификатор(ИдентификаторФайла));
		ОткрытьПрисоединенныйФайлПоСсылке(СсылкаНаФайл, Форма.УникальныйИдентификатор);
	ИначеЕсли ЗначениеЗаполнено(ДанныеСобытия.href) Тогда
		НачатьЗапускПриложения(Неопределено,ДанныеСобытия.href);
	КонецЕсли;

КонецПроцедуры

Процедура ОткрытьПрисоединенныйФайл(Форма, ИдентификаторСтроки, ПутьКДаннымБезЛишнего) Экспорт

	ИмяТаблицыФайлов=РМ_MarkdownКлиентСервер.ИмяТаблицыПрисоединенныхФайлов(ПутьКДаннымБезЛишнего);
	СтрокаФайла = Форма[ИмяТаблицыФайлов].НайтиПоИдентификатору(ИдентификаторСтроки);
	НачатьЗапускПриложения(Неопределено,СтрокаФайла.ПутьКФайлу);

КонецПроцедуры

Процедура ОткрытьПрисоединенныйФайлПоСсылке(СсылкаНаПрисоединенныйФайл, УникальныйИдентификатор) Экспорт
//	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(СсылкаНаПрисоединенныйФайл, Неопределено, УникальныйИдентификатор);
//	Если ДанныеФайла.Зашифрован Тогда
//		// Файл может быть изменен в другом сеансе.
//		ОповеститьОбИзменении(СсылкаНаПрисоединенныйФайл);
//		Возврат;
//	КонецЕсли;
//	
//	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла,Ложь);

КонецПроцедуры

Процедура СдвинутьГраницыВыделения(ГраницыВыделения, ТекстВставки, СтрокаКонцаДо)
		//двигаем границы выделения
	СтрокиТекста=СтрРазделить(ТекстВставки, Символы.ПС);
	КоличествоСтрокТекста=СтрокиТекста.Количество();

	ГраницыВыделения.КонецСтроки=ГраницыВыделения.КонецСтроки + КоличествоСтрокТекста - 1;
	Если КоличествоСтрокТекста = 1 И ГраницыВыделения.НачалоСтроки = ГраницыВыделения.КонецСтроки Тогда
		ГраницыВыделения.КонецКолонки=ГраницыВыделения.КонецКолонки + СтрДлина(ТекстВставки);
	ИначеЕсли КоличествоСтрокТекста > 1 Тогда
		ГраницыВыделения.КонецКолонки=СтрДлина(СтрокиТекста[СтрокиТекста.Количество() - 1]) + СтрДлина(СтрокаКонцаДо)+1;
	КонецЕсли;

	Если ГраницыВыделения.КонецКолонки = 0 Тогда
		ГраницыВыделения.КонецКолонки=1;
	КонецЕсли;

КонецПроцедуры

Процедура КомандаMDДобавитьШаблон(ТекстКомментария, ГраницыВыделения, СтруктураСтрокMD)

	ТекстовыйДокумент=Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстКомментария);

	Если ЗначениеЗаполнено(СтруктураСтрокMD.ТекстMDНачалоВыделения) Тогда
		
		//В начало вставляем данную строку
		СтрокаВставки=ТекстовыйДокумент.ПолучитьСтроку(ГраницыВыделения.НачалоСтроки);

		СтрокаВставки=Лев(СтрокаВставки, ГраницыВыделения.НачалоКолонки - 1) + СтруктураСтрокMD.ТекстMDНачалоВыделения
			+ Сред(СтрокаВставки, ГраницыВыделения.НачалоКолонки);

		СтрокаКонцаВыделения=ТекстовыйДокумент.ПолучитьСтроку(ГраницыВыделения.КонецСтроки);

		ТекстовыйДокумент.УдалитьСтроку(ГраницыВыделения.НачалоСтроки);
		ТекстовыйДокумент.ВставитьСтроку(ГраницыВыделения.НачалоСтроки, СтрокаВставки);

		СдвинутьГраницыВыделения(ГраницыВыделения, СтруктураСтрокMD.ТекстMDНачалоВыделения, СтрокаКонцаВыделения);
	КонецЕсли;

	Если ЗначениеЗаполнено(СтруктураСтрокMD.ТекстMDКонцаВыделения) Тогда
		//В начало вставляем данную строку
		СтрокаВставки=ТекстовыйДокумент.ПолучитьСтроку(ГраницыВыделения.КонецСтроки);

		СтрокаВставки=Лев(СтрокаВставки, ГраницыВыделения.КонецКолонки - 1) + СтруктураСтрокMD.ТекстMDКонцаВыделения
			+ Сред(СтрокаВставки, ГраницыВыделения.КонецКолонки);

		СтрокаКонцаВыделения=ТекстовыйДокумент.ПолучитьСтроку(ГраницыВыделения.КонецСтроки);

		ТекстовыйДокумент.УдалитьСтроку(ГраницыВыделения.КонецСтроки);
		ТекстовыйДокумент.ВставитьСтроку(ГраницыВыделения.КонецСтроки, СтрокаВставки);

		СдвинутьГраницыВыделения(ГраницыВыделения, СтруктураСтрокMD.ТекстMDКонцаВыделения, СтрокаКонцаВыделения);

	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураСтрокMD.ТекстMDНачалоСтроки) Тогда
		Для НомерСтроки = ГраницыВыделения.НачалоСтроки По ГраницыВыделения.КонецСтроки Цикл
			СтрокаВставки=ТекстовыйДокумент.ПолучитьСтроку(НомерСтроки);
			СтрокаВставки=СтруктураСтрокMD.ТекстMDНачалоСтроки + СтрокаВставки;

			ТекстовыйДокумент.УдалитьСтроку(НомерСтроки);
			ТекстовыйДокумент.ВставитьСтроку(НомерСтроки, СтрокаВставки);
		КонецЦикла;
	КонецЕсли;

	Если ЗначениеЗаполнено(СтруктураСтрокMD.ТекстMDСтрокаДо) Тогда
		ТекстовыйДокумент.ВставитьСтроку(ГраницыВыделения.НачалоСтроки, СтруктураСтрокMD.ТекстMDСтрокаДо);
	КонецЕсли;

	Если ЗначениеЗаполнено(СтруктураСтрокMD.ТекстMDСтрокаПосле) Тогда
		ТекстовыйДокумент.ВставитьСтроку(ГраницыВыделения.НачалоСтроки + ?(ЗначениеЗаполнено(
			СтруктураСтрокMD.ТекстMDСтрокаДо), 1, 0), СтруктураСтрокMD.ТекстMDСтрокаПосле);
	КонецЕсли;
	ТекстКомментария=ТекстовыйДокумент.ПолучитьТекст();
КонецПроцедуры

Процедура MDДобавитьПереводСтроки(ТекстКомментария)
	Если ЗначениеЗаполнено(ТекстКомментария) Тогда
		ТекстКомментария = ТекстКомментария + Символы.ПС + Символы.ПС;
	КонецЕсли;
КонецПроцедуры