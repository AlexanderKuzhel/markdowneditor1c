#Область ПрограммныйИнтерфейс

Функция ПолучитьАдресКомпонентыShowodwn() Экспорт
	ДвоичныеДанные=ПолучитьОбщийМакет("РМ_showdown");
	
	ИмяВременногоФайла=ПолучитьИмяВременногоФайла("js");
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	Текст=Новый ТекстовыйДокумент;
	Текст.Прочитать(ИмяВременногоФайла);
	
	ПутьКБиблиотеке=ПоместитьВоВременноеХранилище(Текст.ПолучитьТекст());
	
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
	КонецПопытки;
	
	Возврат ПутьКБиблиотеке;
КонецФункции

Функция СформироватьТекстHTMLДляТекстаMarkdown() Экспорт
	ПутьКБиблиотеке=ПолучитьАдресКомпонентыShowodwn();
	
	ТекстHTML=
	"<html>
	|<head>
	|    <script>"+ПолучитьИзВременногоХранилища(ПутьКБиблиотеке)+"</script>
	|    <script>
	|        var markdownTexts={};
	|		 var converter = new showdown.Converter();
	|	     converter.setFlavor('github');
	|
	|	     function clearTexts(){
	|            markdownTexts={};
	|        }
	|
	|        function addText(key, text){
	|            markdownTexts[key]=text;
	|        }
	|	     function convertOneText(key,text){
	|           
	|			 var newdiv = document.createElement('div');
	|            newdiv.className = 'wiki';
	|            newdiv.id = key;
	|
	|           newdiv.innerHTML = converter.makeHtml(text);
	|
	|           return newdiv;
	|      	 }
	|        
	|        function markdownConvert(){
	|            var container=document.getElementById('wiki-container');
	|            container.innerHTML='';
	|
	|            for (var key in markdownTexts) {
	|                if (markdownTexts.hasOwnProperty(key)) {
	|                    var markText = markdownTexts[key];
	|                    
	|                	 var newdiv=convertOneText(key,markText);
	|                    container.appendChild(newdiv);
	|                }
	|            }
	|
	|        }
	|    </script>
	|    <style>
	|    	html { 
	|			word-break: break-all;
	|    	}
	|    </style>	
	|	 
	|</head>
	|    
	|<body>
	|    <div id=""wiki-container""></div>
	|    <button id=""interactionButton"" style=""display: none"">Кнопка взаимодействия</button>
	|</body>
	|
	|    
	|</html>
	|";
	
	Возврат ТекстHTML;
КонецФункции

Процедура ВставитьПолеРедактированияТекстаНаФорму(Форма, ГруппаЭлементовТекста, ПутьКДанным) Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка");
	
	ПутьКДаннымБезЛишнего=РМ_MarkdownКлиентСервер.ПолучитьПутьКДаннымБезЛишнего(ПутьКДанным);
	ПравильныйПутьКДанным=ПутьКДанным;
	
	//В маркдауне нужно сделать две закладки
	//редактирование и просмотр
	
	//1. Сначала добавляем страницы
	ОписаниеЭлемента=НовыйОписаниеРеквизитаЭлемента();
	ОписаниеЭлемента.Имя=РМ_MarkdownКлиентСервер.ПолучитьИмяЭлементаПанелиСтраницРедактированияКомментария(ПутьКДанным);
	ОписаниеЭлемента.РодительЭлемента=ГруппаЭлементовТекста;
	
	ОписаниеЭлемента.Параметры.Тип=Тип("ГруппаФормы");
	ОписаниеЭлемента.Параметры.Вставить("Вид",ВидГруппыФормы.Страницы);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяШирина",Ложь);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяВысота",Ложь);
	ОписаниеЭлемента.Параметры.Вставить("ОтображениеСтраниц",ОтображениеСтраницФормы.ЗакладкиСнизу);
	ОписаниеЭлемента.Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
	
	ОписаниеЭлемента.Действия.Вставить("ПриСменеСтраницы","Подключаемый_ПриСменеСтраницыПоляКомментария");
	
	СтраницыРедактирования=СоздатьЭлементПоОписанию(Форма,ОписаниеЭлемента);
	
	//2. Страница редактирвания
	ОписаниеЭлемента=НовыйОписаниеРеквизитаЭлемента();
	ОписаниеЭлемента.Имя=РМ_MarkdownКлиентСервер.ПолучитьИмяСтраницыРедактированияКомментария(ПутьКДанным);
	ОписаниеЭлемента.РодительЭлемента=СтраницыРедактирования;
	ОписаниеЭлемента.Заголовок="Редатирование";		
	
	ОписаниеЭлемента.Параметры.Тип=Тип("ГруппаФормы");
	ОписаниеЭлемента.Параметры.Вставить("Вид",ВидГруппыФормы.Страница);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяШирина",Ложь);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяВысота",Ложь);
	//ОписаниеЭлемента.Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
	
	СтраницаРедактирования=СоздатьЭлементПоОписанию(Форма,ОписаниеЭлемента);
	
	//3. Страница просмотра
	ОписаниеЭлемента=НовыйОписаниеРеквизитаЭлемента();
	ОписаниеЭлемента.Имя=РМ_MarkdownКлиентСервер.ПолучитьИмяСтраницыПросмотраКомментария(ПутьКДанным);
	ОписаниеЭлемента.РодительЭлемента=СтраницыРедактирования;
	ОписаниеЭлемента.Заголовок="Просмотр";		
	
	ОписаниеЭлемента.Параметры.Тип=Тип("ГруппаФормы");
	ОписаниеЭлемента.Параметры.Вставить("Вид",ВидГруппыФормы.Страница);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяШирина",Ложь);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяВысота",Ложь);
	//ОписаниеЭлемента.Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
	
	СтраницаПросмотра=СоздатьЭлементПоОписанию(Форма,ОписаниеЭлемента);
	
	//4.1. Командная панель редактирования
	ДобавитьКнопкиВКоманднуюПанельРедактированияПоляMarkdown(Форма,СтраницаРедактирования,ПутьКДаннымБезЛишнего);
	//ОписаниеЭлемента=РаботаСФормамиСервер.НовыйОписаниеРеквизитаЭлемента();
	//ОписаниеЭлемента.Имя="Страница_Просмотр_"+ПутьКДаннымБезЛишнего;
	//ОписаниеЭлемента.РодительЭлемента=СтраницыРедактирования;
	//ОписаниеЭлемента.Заголовок="Редатирование";		
	//
	//ОписаниеЭлемента.Параметры.Тип=Тип("СтраницаФормы");
	//ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяШирина",Ложь);
	//ОписаниеЭлемента.Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
	//
	//СтраницыПросмотра=РаботаСФормамиСервер.СоздатьЭлементПоОписанию(Форма,ОписаниеЭлемента);
	
	
	//4.2. текст редактирования
	ОписаниеЭлемента=НовыйОписаниеРеквизитаЭлемента();
	ОписаниеЭлемента.Имя=ПутьКДаннымБезЛишнего;
	ОписаниеЭлемента.ПутьКДанным=ПравильныйПутьКДанным;
	ОписаниеЭлемента.РодительЭлемента=СтраницаРедактирования;
	//ОписаниеЭлемента.Заголовок="Редатирование";		
	
	//ОписаниеЭлемента.Параметры.Вставить("Вид",ВидПоляФормы.ПолеТекстовогоДокумента);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяШирина",Ложь);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяВысота",Ложь);
	////ОписаниеЭлемента.Параметры.Вставить("Высота",10);
	ОписаниеЭлемента.Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
	ОписаниеЭлемента.Параметры.Вставить("МногострочныйРежим",Истина);
	ОписаниеЭлемента.Параметры.Вставить("РасширенноеРедактирование",Истина);
	
	//ОписаниеЭлемента.Действия.Вставить("ПриИзменении","Подключаемый_ПриИзмененииПоляКомментария");
	
	ТекстРедактирования=СоздатьЭлементПоОписанию(Форма,ОписаниеЭлемента);
	
	//5.1. Реквизит поля просмотра
	ПутьКПолюПросмотра=РМ_MarkdownКлиентСервер.ПолучитьИмяЭлементаПросмотраКомментария(ПутьКДанным);
	
	НовыйРеквизит=Новый РеквизитФормы(ПутьКПолюПросмотра,ОписаниеТиповСтрока);
	
	МассивДобавляемыхРеквизитов=Новый Массив;
	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
	
	// 5.1.а Реквизит таблицы присоединенных файлов
	ПутьКТаблицеПрисоединенныхФайлов="ТаблицаПрисоединенныхФайлов";
	Если Форма.Элементы.Найти(ПутьКТаблицеПрисоединенныхФайлов) = Неопределено Тогда
		
		НовыйРеквизит = Новый РеквизитФормы(ПутьКТаблицеПрисоединенныхФайлов, Новый ОписаниеТипов("ТаблицаЗначений"));
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
		
//		НовыйРеквизит = Новый РеквизитФормы("Ссылка", Новый ОписаниеТипов("СправочникСсылка.ЗадачаПрисоединенныеФайлы"), ПутьКТаблицеПрисоединенныхФайлов);
		НовыйРеквизит = Новый РеквизитФормы("Ссылка", Справочники.ТипВсеСсылки(), ПутьКТаблицеПрисоединенныхФайлов);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы("ПутьКФайлу", ОписаниеТиповСтрока, ПутьКТаблицеПрисоединенныхФайлов);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
		
		НовыйРеквизит = Новый РеквизитФормы("ИмяФайла", ОписаниеТиповСтрока, ПутьКТаблицеПрисоединенныхФайлов);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
		НовыйРеквизит = Новый РеквизитФормы("Адрес", ОписаниеТиповСтрока, ПутьКТаблицеПрисоединенныхФайлов);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
		НовыйРеквизит = Новый РеквизитФормы("ЭтоНовый", Новый ОписаниеТипов("Булево"), ПутьКТаблицеПрисоединенныхФайлов);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
		
	КонецЕсли;
	
	Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов,);
	
	Форма[ПутьКПолюПросмотра]=СформироватьТекстHTMLДляТекстаMarkdown();
	
	//5.2. Поле формы просмтра
	ОписаниеЭлемента=НовыйОписаниеРеквизитаЭлемента();
	ОписаниеЭлемента.Имя=ПутьКПолюПросмотра;
	ОписаниеЭлемента.ПутьКДанным=ПутьКПолюПросмотра;
	ОписаниеЭлемента.РодительЭлемента=СтраницаПросмотра;
	//ОписаниеЭлемента.Заголовок="Редатирование";		
	
	ОписаниеЭлемента.Параметры.Вставить("Вид",ВидПоляФормы.ПолеHTMLДокумента);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяШирина",Ложь);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяВысота",Ложь);
	//ОписаниеЭлемента.Параметры.Вставить("Высота",10);
	ОписаниеЭлемента.Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
	
	ОписаниеЭлемента.Действия.Вставить("ПриНажатии","Подключаемый_ПриНажатииПоляПросмотраКомментария");
	
	СтраницыПросмотра=СоздатьЭлементПоОписанию(Форма,ОписаниеЭлемента);
	
	// 5.3 Присоединенные файлы
	ОписаниеЭлемента=НовыйОписаниеРеквизитаЭлемента();
	ОписаниеЭлемента.Имя="НовыеПрисоединенныеФайлы";
	ОписаниеЭлемента.РодительЭлемента=ГруппаЭлементовТекста;
	ОписаниеЭлемента.Заголовок="Новые файлы";		
	
	ОписаниеЭлемента.Параметры.Тип=Тип("ГруппаФормы");
	ОписаниеЭлемента.Параметры.Вставить("Вид",ВидГруппыФормы.ОбычнаяГруппа);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяШирина",Ложь);
	ОписаниеЭлемента.Параметры.Вставить("АвтоМаксимальнаяВысота",Ложь);
	ОписаниеЭлемента.Параметры.Вставить("Поведение", ПоведениеОбычнойГруппы.Свертываемая);
	
	ГруппаНовыеПрисоединенныеФайлы=СоздатьЭлементПоОписанию(Форма,ОписаниеЭлемента);
	
	
КонецПроцедуры

Процедура ДобавитьКнопкиВКоманднуюПанельРедактированияПоляMarkdown(Форма,ГруппаПоляРедактирования,ПутьКДаннымРедактирования) 
	
	ОписаниеЭлемента=НовыйОписаниеРеквизитаЭлемента();
	ОписаниеЭлемента.Имя="КомманднаяПанель_Редактирование_"+ПутьКДаннымРедактирования;
	ОписаниеЭлемента.РодительЭлемента=ГруппаПоляРедактирования;
	//ОписаниеЭлемента.Заголовок="Редатирование";		
	
	ОписаниеЭлемента.Параметры.Тип=Тип("ГруппаФормы");
	ОписаниеЭлемента.Параметры.Вставить("Вид",ВидГруппыФормы.КоманднаяПанель);
	
	КоманднаяПанель=СоздатьЭлементПоОписанию(Форма,ОписаниеЭлемента);
	
	//ИЗменения шрифта
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDЖирный","Жирный",БиблиотекаКартинок.РМ_MDЖирный,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDКурсив","Курсив",БиблиотекаКартинок.РМ_MDКурсив,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDЗачеркнутый","Зачеркнутый",БиблиотекаКартинок.РМ_MDЗачеркнутый,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	

	//Заголовки
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDЗаголовок1","Заголовок 1",БиблиотекаКартинок.РМ_ЗаголовокH1,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDЗаголовок2","Заголовок 2",БиблиотекаКартинок.РМ_ЗаголовокH2,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDЗаголовок3","Заголовок 3",БиблиотекаКартинок.РМ_ЗаголовокH3,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	

	//Всякое
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDЦитата","Цитата",БиблиотекаКартинок.РМ_MDЦитата,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDСсылка","Ссылка",БиблиотекаКартинок.РМ_Ссылка,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDПрограммныйКод","Вставить код",БиблиотекаКартинок.РМ_ПрограммныйКод,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	

	//Списки
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDМаркерыСписок","Маркированный список",БиблиотекаКартинок.РМ_MDМаркерыСписок,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDНумерованныйСписок","Нумерованный список",БиблиотекаКартинок.РМ_MDНумерованныйСписок,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDСписокЗадач","Список задач",БиблиотекаКартинок.РМ_СписокЗадач,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDТаблица","Вставить таблицу",БиблиотекаКартинок.РМ_Таблица,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	
	
	
	СочетаниеКлавишВставкиКартинки=Новый СочетаниеКлавиш(Клавиша.Z,Ложь,Истина,Истина);
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDВставитьИзображениеИзБуфераОбмена","Изображение из буфера",БиблиотекаКартинок.РМ_MDВставитьКартинкуИзБуфера,Форма,КоманднаяПанель,ПутьКДаннымРедактирования,СочетаниеКлавишВставкиКартинки);	
	
	ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown("КомандаMDДобавитьФайл","Добавить файл",БиблиотекаКартинок.РМ_Скрепка,Форма,КоманднаяПанель,ПутьКДаннымРедактирования);	
	
	// подменю для вставки
	ОписаниеЭлемента=НовыйОписаниеРеквизитаЭлемента();
	ОписаниеЭлемента.Имя="ПодменюВставитьЗагруженноеИзображение";
	ОписаниеЭлемента.РодительЭлемента=КоманднаяПанель;
	ОписаниеЭлемента.Заголовок="Вставить...";		
	
	ОписаниеЭлемента.Параметры.Тип=Тип("ГруппаФормы");
	ОписаниеЭлемента.Параметры.Вставить("Вид",ВидГруппыФормы.Подменю);
	
	СоздатьЭлементПоОписанию(Форма,ОписаниеЭлемента);
	
КонецПроцедуры

Процедура ДобавитьКомандуНаКоманднуюПанельРедактированияMarkdown(ИмяКоманды,Заголовок,Картинка,Форма,КоманднаяПанель,ПутьКДаннымРедактирования,СочетаниеКлавиш=Неопределено)
	
	НовыйОписаниеКомандыКнопки=НовыйОписаниеКомандыКнопки();
	НовыйОписаниеКомандыКнопки.Имя=ИмяКоманды+"_"+ПутьКДаннымРедактирования;
	НовыйОписаниеКомандыКнопки.Действие="Подключаемый_ОбработкаКомандыПоляКомментария";
	НовыйОписаниеКомандыКнопки.ИмяКоманды=ИмяКоманды+"_"+ПутьКДаннымРедактирования;
	НовыйОписаниеКомандыКнопки.Заголовок=Заголовок;
	НовыйОписаниеКомандыКнопки.Картинка=Картинка;
	НовыйОписаниеКомандыКнопки.РодительЭлемента=КоманднаяПанель;
	НовыйОписаниеКомандыКнопки.СочетаниеКлавиш=СочетаниеКлавиш;
	
	СоздатьКомандуПоОписанию(Форма,НовыйОписаниеКомандыКнопки);
	СоздатьКнопкуПоОписанию(Форма,НовыйОписаниеКомандыКнопки);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСФормами

Функция НовыйОписаниеРеквизитаЭлемента() Экспорт
	СтруктураРеквизита = Новый Структура;
	
	//СтруктураРеквизита.Вставить("Класс", А1Э_Классы.ОписаниеРеквизитаЭлемента());
	СтруктураРеквизита.Вставить("СоздаватьРеквизит", Истина);
	СтруктураРеквизита.Вставить("Имя", "");
	СтруктураРеквизита.Вставить("ОписаниеТипов", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(10)));
	СтруктураРеквизита.Вставить("ПутьКДанным", "");
	СтруктураРеквизита.Вставить("Заголовок", "");
	
	СтруктураРеквизита.Вставить("СоздаватьЭлемент", Истина);
	СтруктураРеквизита.Вставить("РодительЭлемента", Неопределено);
	СтруктураРеквизита.Вставить("ПередЭлементом", Неопределено);
	СтруктураРеквизита.Вставить("МногострочныйРежим",Неопределено);
	СтруктураРеквизита.Вставить("РасширенноеРедактирование",Неопределено);
	СтруктураРеквизита.Вставить("РастягиватьПоГоризонтали",Неопределено);
	СтруктураРеквизита.Вставить("РастягиватьПоВертикали",Неопределено);
	
	
	СтруктураРеквизита.Вставить("Параметры", НовыйПараметрыРеквизита());
	
	
	СтруктураРеквизита.Вставить("Действия", Новый Структура);
	
	
	
	Возврат СтруктураРеквизита;
	
КонецФункции

Функция НовыйПараметрыРеквизита()
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("Тип", Тип("ПолеФормы"));
	Параметры.Вставить("Вид_ПоУмолчанию", ВидПоляФормы.ПолеВвода);
	
	Возврат Параметры;
	
КонецФункции

Функция НовыйОписаниеКомандыКнопки() Экспорт
	Структура = Новый Структура;
	
	Структура.Вставить("СоздаватьКоманду", Истина);
	Структура.Вставить("СоздаватьКнопку", Истина);
	
	Структура.Вставить("Имя", "");
	Структура.Вставить("Действие", "");
	Структура.Вставить("ИмяКоманды", "");
	Структура.Вставить("ЭтоГиперссылка", Ложь);
	Структура.Вставить("РодительЭлемента", Неопределено);
	Структура.Вставить("ПередЭлементом", Неопределено);
	Структура.Вставить("Заголовок", "");
	Структура.Вставить("Подсказка", "");
	Структура.Вставить("СочетаниеКлавиш", Неопределено);
	Структура.Вставить("Картинка", Неопределено);
	
	Возврат Структура;
КонецФункции

Функция СоздатьКомандуПоОписанию(Форма, ОписаниеКоманды) Экспорт 
	Если НЕ ОписаниеКоманды.СоздаватьКоманду Тогда
		Возврат Неопределено;
	КонецЕсли;
	Команда = Форма.Команды.Добавить(ОписаниеКоманды.Имя);
	Команда.Заголовок  = ОписаниеКоманды.Заголовок;
	Команда.Подсказка  = ОписаниеКоманды.Подсказка;
	Команда.Действие   = ОписаниеКоманды.Действие;
	Команда.Картинка   = ОписаниеКоманды.Картинка;
	Если ОписаниеКоманды.СочетаниеКлавиш<>Неопределено Тогда
		Команда.СочетаниеКлавиш = ОписаниеКоманды.СочетаниеКлавиш;
	КонецЕсли;
	
	Возврат Команда;
КонецФункции

Функция СоздатьЭлементПоОписанию(Форма, ОписаниеРеквизита) Экспорт
	Если НЕ ОписаниеРеквизита.СоздаватьЭлемент Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ЭлементФормы = Форма.Элементы.Вставить(ИмяТаблицыПоляФормы(Форма, ОписаниеРеквизита.РодительЭлемента) + ОписаниеРеквизита.Имя, 
	ОписаниеРеквизита.Параметры.Тип, 
	ЭлементФормы(Форма, ОписаниеРеквизита.РодительЭлемента), 
	ЭлементФормы(Форма, ОписаниеРеквизита.ПередЭлементом));
	
	ЭлементФормы.Заголовок = ОписаниеРеквизита.Заголовок;
	
	Если Тип(ЭлементФормы) = Тип("ПолеФормы") Тогда
		ЭлементФормы.Вид = ОписаниеРеквизита.Параметры.Вид_ПоУмолчанию;
		Попытка
			Если ТипЗнч(Реквизит(Форма, ОписаниеРеквизита.Имя, ОписаниеРеквизита.ПутьКРеквизиту)) = Тип("Булево") Тогда
				ЭлементФормы.Вид = ВидПоляФормы.ПолеФлажка;
			КонецЕсли;
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭлементФормы, ОписаниеРеквизита.Параметры);
	
	Если Тип(ЭлементФормы) = Тип("ПолеФормы") Тогда
		Если ЗначениеЗаполнено(ОписаниеРеквизита.ПутьКДанным) Тогда
			ЭлементФормы.ПутьКДанным = ОписаниеРеквизита.ПутьКДанным;
		Иначе
			ЭлементФормы.ПутьКДанным = ОписаниеРеквизита.Имя;
		КонецЕсли;
		
		Если ОписаниеРеквизита.МногострочныйРежим<>Неопределено Тогда
			ЭлементФормы.МногострочныйРежим=ОписаниеРеквизита.МногострочныйРежим;
		КонецЕсли;
		Если ОписаниеРеквизита.РасширенноеРедактирование<>Неопределено Тогда
			ЭлементФормы.РасширенноеРедактирование=ОписаниеРеквизита.РасширенноеРедактирование;
		КонецЕсли;
		
	КонецЕсли;
	Если ОписаниеРеквизита.РастягиватьПоГоризонтали<>Неопределено Тогда
		ЭлементФормы.РастягиватьПоГоризонтали=ОписаниеРеквизита.РастягиватьПоГоризонтали;
	КонецЕсли;
	Если ОписаниеРеквизита.РастягиватьПоВертикали<>Неопределено Тогда
		ЭлементФормы.РастягиватьПоВертикали=ОписаниеРеквизита.РастягиватьПоВертикали;
	КонецЕсли;
	
	Для Каждого Действие Из ОписаниеРеквизита.Действия Цикл
		ЭлементФормы.УстановитьДействие(Действие.Ключ, Действие.Значение);
	КонецЦикла;
	Возврат ЭлементФормы;
КонецФункции

Функция СоздатьКнопкуПоОписанию(Форма, ОписаниеКнопки) Экспорт 
	Если НЕ ОписаниеКнопки.СоздаватьКнопку Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Кнопка = Форма.Элементы.Вставить(ОписаниеКнопки.Имя, Тип("КнопкаФормы"), ЭлементФормы(Форма, ОписаниеКнопки.РодительЭлемента), ЭлементФормы(Форма, ОписаниеКнопки.ПередЭлементом));
	Если НЕ ОписаниеКнопки.СоздаватьКоманду Тогда
		Кнопка.Заголовок = ОписаниеКнопки.Заголовок;
	КонецЕсли;
	Если ОписаниеКнопки.ЭтоГиперссылка = Ложь Тогда
		Если ЭтоКнопкаКоманднойПанели(Форма, ОписаниеКнопки.РодительЭлемента) Тогда
			Кнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		Иначе
			Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		КонецЕсли;
	Иначе
		Если ЭтоКнопкаКоманднойПанели(Форма, ОписаниеКнопки.РодительЭлемента) Тогда
			Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
		Иначе
			Кнопка.Вид = ВидКнопкиФормы.ГиперссылкаКоманднойПанели;
		КонецЕсли;
	КонецЕсли;
	Кнопка.ИмяКоманды = ОписаниеКнопки.ИмяКоманды;
	
КонецФункции

Функция ЭтоКнопкаКоманднойПанели(Форма, Знач РодительКнопки) 
	Если РодительКнопки = Неопределено Тогда
		Возврат Ложь;
	ИначеЕсли РодительКнопки = Форма.КоманднаяПанель Тогда
		Возврат Истина;
	ИначеЕсли ТипЗнч(РодительКнопки) = Тип("УправляемаяФорма") Тогда
		Возврат Ложь;
	Иначе
		РодительКнопки = ЭлементФормы(Форма, РодительКнопки);
		Возврат ЭтоКнопкаКоманднойПанели(Форма, РодительКнопки.Родитель);
	КонецЕсли;
КонецФункции

Функция ИмяТаблицыПоляФормы(Форма, Знач РодительЭлемента)
	Если РодительЭлемента = Неопределено Тогда
		Возврат "";
	ИначеЕсли ТипЗнч(РодительЭлемента) = Тип("ТаблицаФормы") Тогда
		Возврат РодительЭлемента.Имя;
	ИначеЕсли ТипЗнч(РодительЭлемента) = Тип("УправляемаяФорма") Тогда
		Возврат "";
	Иначе
		РодительКнопки = ЭлементФормы(Форма, РодительЭлемента);
		Возврат ИмяТаблицыПоляФормы(Форма, РодительЭлемента.Родитель);
	КонецЕсли;	
КонецФункции

Функция ЭлементФормы(Форма, Идентификатор) Экспорт
	Если ТипЗнч(Идентификатор) = Тип("Строка") Тогда
		Возврат Форма.Элементы.Найти(Идентификатор);
	Иначе
		Возврат Идентификатор;
	КонецЕсли;
КонецФункции

Функция Реквизит(Форма, ИмяРеквизита, ПутьКРеквизиту = "") Экспорт
	Если ПутьКРеквизиту <> "" Тогда
		Разделитель = СтрНайти(ПутьКРеквизиту, ".");
		Если Разделитель = 0 Тогда
			ИмяШага = ПутьКРеквизиту;
			ОстатокПути = "";
		Иначе
			ИмяШага = Лев(ПутьКРеквизиту, Разделитель - 1);
			ОстатокПути = Сред(ПутьКРеквизиту, Разделитель + 1);
		КонецЕсли;
		Возврат Реквизит(Форма[ИмяШага], ИмяРеквизита, ОстатокПути);
	Иначе		
		НесуществующееЗначение = Неопределено;//А1Э_Классы.НесуществующееЗначение();
		Структура = Новый Структура(ИмяРеквизита, НесуществующееЗначение);
		ЗаполнитьЗначенияСвойств(Структура, Форма);
		Если Структура[ИмяРеквизита] = НесуществующееЗначение Тогда
			Возврат НесуществующееЗначение;
		КонецЕсли;
		Возврат Форма[ИмяРеквизита];
	КонецЕсли;
КонецФункции

#КонецОбласти
